
# Kubernetes란 무엇인가?

## 쉬운 설명
**Kubernetes(쿠버네티스)**는 여러 대의 컴퓨터에서 **컨테이너**들을 자동으로 관리해주는 도구입니다.

마치 **아파트 관리사무소**처럼 생각하면 됩니다:
- 새로운 세대(컨테이너)가 입주하면 적절한 호수(서버)에 배치
- 문제가 생긴 세대는 다른 곳으로 이사 처리
- 전체 아파트(클러스터)의 상태를 지속적으로 관리

## 왜 필요한가?

### 기존의 문제점
- 서버 한 대가 고장나면 서비스 중단
- 트래픽이 많아지면 수동으로 서버를 늘려야 함
- 각 서버의 상태를 일일이 확인해야 함

### Kubernetes의 해결책
- **자동 복구**: 문제가 생긴 컨테이너를 자동으로 재시작
- **자동 확장**: 트래픽에 따라 컨테이너 개수를 자동으로 조절
- **중앙 관리**: 하나의 도구로 모든 서버와 컨테이너를 관리

## 기본 개념

### 컨테이너 vs 서버
```
기존 방식: 서버 = 집 전체를 빌려서 사용
컨테이너: 원룸만 빌려서 사용 (효율적!)
```

### Kubernetes의 역할
- **마스터**: 전체를 관리하는 관리자
- **워커 노드**: 실제 일을 하는 직원들
- **Pod**: 컨테이너가 들어가는 방
- **Service**: 외부에서 접근할 수 있는 출입구

## 학습 순서
1. [[Kubernetes 기본 구조]] - 전체적인 구조 이해
2. [[Pod와 Container]] - 가장 기본이 되는 단위
3. [[Service와 Networking]] - 외부 접근 방법
4. [[Deployment와 ReplicaSet]] - 앱 배포와 관리
5. [[ConfigMap과 Secret]] - 설정과 비밀번호 관리
6. [[Volume과 Storage]] - 데이터 저장 방법
7. [[Kubernetes 실습 가이드]] - 직접 해보기

## 관련 도구들
- **Docker**: 컨테이너를 만드는 도구
- **kubectl**: Kubernetes를 조작하는 명령어 도구
- **Helm**: Kubernetes 앱을 쉽게 설치하는 도구
- **Minikube**: 로컬에서 Kubernetes를 연습할 수 있는 도구

## 다음 단계
[[Kubernetes 기본 구조]]를 읽어보세요!

